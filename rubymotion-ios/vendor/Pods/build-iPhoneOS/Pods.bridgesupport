<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='NSString*' name='PKRevealControllerAllowsOverdrawKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerAnimationCurveKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerAnimationDurationKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerAnimationTypeKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerDisablesFrontViewInteractionKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerQuickSwipeToggleVelocityKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerRecognizesPanningOnFrontViewKey' type='@'/>
<constant const='true' declared_type='NSString*' name='PKRevealControllerRecognizesResetTapOnFrontViewKey' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDDidAppearNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDDidDisappearNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDDidReceiveTouchEventNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDStatusUserInfoKey' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDWillAppearNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SVProgressHUDWillDisappearNotification' type='@'/>
<enum name='SVProgressHUDMaskTypeBlack' value='3'/>
<enum name='SVProgressHUDMaskTypeClear' value='2'/>
<enum name='SVProgressHUDMaskTypeGradient' value='4'/>
<enum name='SVProgressHUDMaskTypeNone' value='1'/>
<function name='PKLog' variadic='true'>
<arg declared_type='NSString*' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</function>
<class name='CAAnimation'>
<method selector='identifier'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSInteger' index='0' name='identifier' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CALayer'>
<method selector='animateToAlpha:timingFunction:duration:alterModel:'>
<arg declared_type='CGFloat' index='0' name='value' type='f' type64='d'/>
<arg declared_type='CAMediaTimingFunction*' index='1' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='BOOL' index='3' name='alterModel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animateToPoint:timingFunction:duration:alterModel:'>
<arg declared_type='CGPoint' index='0' name='toPoint' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CAMediaTimingFunction*' index='1' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='BOOL' index='3' name='alterModel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animateToTransform:timingFunction:duration:alterModel:'>
<arg declared_type='CATransform3D' index='0' name='toTransform' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type='CAMediaTimingFunction*' index='1' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='BOOL' index='3' name='alterModel' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='animationFromAlpha:toAlpha:timingFunction:duration:'>
<arg declared_type='CGFloat' index='0' name='fromValue' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='toValue' type='f' type64='d'/>
<arg declared_type='CAMediaTimingFunction*' index='2' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='CABasicAnimation*' type='@'/>
</method>
<method class_method='true' selector='animationFromPosition:toPosition:timingFunction:duration:'>
<arg declared_type='CGPoint' index='0' name='fromPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CGPoint' index='1' name='toPosition' type='{CGPoint=ff}' type64='{CGPoint=dd}'/>
<arg declared_type='CAMediaTimingFunction*' index='2' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='CABasicAnimation*' type='@'/>
</method>
<method class_method='true' selector='animationFromTransformation:toTransformation:timingFunction:duration:'>
<arg declared_type='CATransform3D' index='0' name='fromTransformation' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type='CATransform3D' index='1' name='toTransformation' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}'/>
<arg declared_type='CAMediaTimingFunction*' index='2' name='timingFunction' type='@'/>
<arg declared_type='NSTimeInterval' index='3' name='duration' type='d'/>
<retval declared_type='CABasicAnimation*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='completionHandler'>
<retval declared_type='PKAnimationCompletionBlock' function_pointer='true' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='layer'>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='performBlock:onMainThread:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='BOOL' index='1' name='mainThread' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='revealController:didChangeToState:'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<arg declared_type='id' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='revealController:willChangeToState:'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<arg declared_type='id' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimating:'>
<arg declared_type='BOOL' index='0' name='animating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionHandler:'>
<arg declared_type='PKAnimationCompletionBlock' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayer:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartHandler:'>
<arg declared_type='PKAnimationStartBlock' function_pointer='true' index='0' name='startHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimationOnLayer:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startHandler'>
<retval declared_type='PKAnimationStartBlock' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='stopAnimation'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PKAnimation'>
<method selector='identifier'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='setIdentifier:'>
<arg declared_type='NSInteger' index='0' name='identifier' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PKLayerAnimator'>
<method selector='addAnimation:forKey:'>
<arg declared_type='PKAnimation*' index='0' name='animation' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addSequentialAnimation:forKey:'>
<arg declared_type='PKSequentialAnimation*' index='0' name='animation' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='animatorForLayer:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='layer'>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='setLayer:'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimationForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAndRemoveAllAnimations'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimationForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PKRevealController'>
<method selector='allowsOverdraw'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='animationCurve'>
<retval declared_type='UIViewAnimationCurve' type='i' type64='q'/>
</method>
<method selector='animationDuration'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='animationType'>
<retval declared_type='int' type='i'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='disablesFrontViewInteraction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enterPresentationModeAnimated:completion:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='PKDefaultCompletionHandler' function_pointer='true' index='1' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='focusedController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='frontViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='hasLeftViewController'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasRightViewController'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithFrontViewController:leftViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrontViewController:leftViewController:rightViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='UIViewController*' index='2' name='rightViewController' type='@'/>
<arg declared_type='NSDictionary*' index='3' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithFrontViewController:rightViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='rightViewController' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isPresentationModeActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='leftViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='options'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='quickSwipeVelocity'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='recognizesPanningOnFrontView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recognizesResetTapOnFrontView'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recognizesResetTapOnFrontViewInPresentationMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='resignPresentationModeEntirely:animated:completion:'>
<arg declared_type='BOOL' index='0' name='entirely' type='B'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='PKDefaultCompletionHandler' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:leftViewController:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:leftViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:leftViewController:rightViewController:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='UIViewController*' index='2' name='rightViewController' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:leftViewController:rightViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='leftViewController' type='@'/>
<arg declared_type='UIViewController*' index='2' name='rightViewController' type='@'/>
<arg declared_type='NSDictionary*' index='3' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:rightViewController:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='rightViewController' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='revealControllerWithFrontViewController:rightViewController:options:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='UIViewController*' index='1' name='rightViewController' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='options' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='revealPanGestureRecognizer'>
<retval declared_type='UIPanGestureRecognizer*' type='@'/>
</method>
<method selector='revealResetTapGestureRecognizer'>
<retval declared_type='UITapGestureRecognizer*' type='@'/>
</method>
<method selector='rightViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='setAllowsOverdraw:'>
<arg declared_type='BOOL' index='0' name='allowsOverdraw' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationCurve:'>
<arg declared_type='UIViewAnimationCurve' index='0' name='animationCurve' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationDuration:'>
<arg declared_type='CGFloat' index='0' name='animationDuration' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationType:'>
<arg declared_type='int' index='0' name='animationType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisablesFrontViewInteraction:'>
<arg declared_type='BOOL' index='0' name='disablesFrontViewInteraction' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrontViewController:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrontViewController:focusAfterChange:completion:'>
<arg declared_type='UIViewController*' index='0' name='frontViewController' type='@'/>
<arg declared_type='BOOL' index='1' name='focus' type='B'/>
<arg declared_type='PKDefaultCompletionHandler' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLeftViewController:'>
<arg declared_type='UIViewController*' index='0' name='leftViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinimumWidth:maximumWidth:forViewController:'>
<arg declared_type='CGFloat' index='0' name='minWidth' type='f' type64='d'/>
<arg declared_type='CGFloat' index='1' name='maxWidth' type='f' type64='d'/>
<arg declared_type='UIViewController*' index='2' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuickSwipeVelocity:'>
<arg declared_type='CGFloat' index='0' name='quickSwipeVelocity' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecognizesPanningOnFrontView:'>
<arg declared_type='BOOL' index='0' name='recognizesPanningOnFrontView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecognizesResetTapOnFrontView:'>
<arg declared_type='BOOL' index='0' name='recognizesResetTapOnFrontView' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecognizesResetTapOnFrontViewInPresentationMode:'>
<arg declared_type='BOOL' index='0' name='recognizesResetTapOnFrontViewInPresentationMode' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRightViewController:'>
<arg declared_type='UIViewController*' index='0' name='rightViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showViewController:'>
<arg declared_type='UIViewController*' index='0' name='controller' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showViewController:animated:completion:'>
<arg declared_type='UIViewController*' index='0' name='controller' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<arg declared_type='PKDefaultCompletionHandler' function_pointer='true' index='2' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='state'>
<retval declared_type='PKRevealController' type='{PKRevealController=#@@@@@@@@@@@@@@@@@@@@@@@@iii@@{CGSize=ff}{CGSize=ff}@@?i@{?=b2b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}}' type64='{PKRevealController=#@@@@@@@@@@@@@@@@@@@@@@@@qqq@@{CGSize=dd}{CGSize=dd}@@?q@{?=b2b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}}'/>
</method>
<method selector='type'>
<retval declared_type='PKRevealController' type='{PKRevealController=#@@@@@@@@@@@@@@@@@@@@@@@@iii@@{CGSize=ff}{CGSize=ff}@@?i@{?=b2b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}}' type64='{PKRevealController=#@@@@@@@@@@@@@@@@@@@@@@@@qqq@@{CGSize=dd}{CGSize=dd}@@?q@{?=b2b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}}'/>
</method>
</class>
<class name='PKRevealControllerView'>
<method selector='hasShadow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setShadow:'>
<arg declared_type='BOOL' index='0' name='shadow' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInteractionForContainedViewEnabled:'>
<arg declared_type='BOOL' index='0' name='userInteractionEnabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewController:'>
<arg declared_type='UIViewController*' index='0' name='viewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateShadowWithAnimationDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
</class>
<class name='PKSequentialAnimation'>
<method class_method='true' selector='animationForKeyPath:values:duration:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSArray*' index='1' name='values' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='animationForKeyPath:values:duration:progress:completion:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSArray*' index='1' name='values' type='@'/>
<arg declared_type='NSTimeInterval' index='2' name='duration' type='d'/>
<arg declared_type='PKSequentialAnimationProgressBlock' function_pointer='true' index='3' name='progress' type='@?'>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='PKAnimationCompletionBlock' function_pointer='true' index='4' name='completion' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='progressHandler'>
<retval declared_type='PKSequentialAnimationProgressBlock' function_pointer='true' type='@?'>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='setProgressHandler:'>
<arg declared_type='PKSequentialAnimationProgressBlock' function_pointer='true' index='0' name='progressHandler' type='@?'>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSValue*' type='@'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SVProgressHUD'>
<method class_method='true' selector='dismiss'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hudBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hudErrorImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='hudFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='hudForegroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hudRingBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hudRingForegroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hudStatusShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hudSuccessImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='popActivity'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='resetOffsetFromCenter'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='hudBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudErrorImage:'>
<arg declared_type='UIImage*' index='0' name='hudErrorImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudFont:'>
<arg declared_type='UIFont*' index='0' name='hudFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudForegroundColor:'>
<arg declared_type='UIColor*' index='0' name='hudForegroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudRingBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='hudRingBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudRingForegroundColor:'>
<arg declared_type='UIColor*' index='0' name='hudRingForegroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudStatusShadowColor:'>
<arg declared_type='UIColor*' index='0' name='hudStatusShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHudSuccessImage:'>
<arg declared_type='UIImage*' index='0' name='hudSuccessImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setOffsetFromCenter:'>
<arg declared_type='UIOffset' index='0' name='offset' type='{UIOffset=ff}' type64='{UIOffset=dd}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setStatus:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='show'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showErrorWithStatus:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showImage:status:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showProgress:status:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<arg declared_type='NSString*' index='1' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showProgress:status:maskType:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<arg declared_type='NSString*' index='1' name='status' type='@'/>
<arg declared_type='SVProgressHUDMaskType' index='2' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showSuccessWithStatus:'>
<arg declared_type='NSString*' index='0' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithMaskType:'>
<arg declared_type='SVProgressHUDMaskType' index='0' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithStatus:'>
<arg declared_type='NSString*' index='0' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithStatus:maskType:'>
<arg declared_type='NSString*' index='0' name='status' type='@'/>
<arg declared_type='SVProgressHUDMaskType' index='1' name='maskType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIViewController'>
<method selector='revealController'>
<retval declared_type='PKRevealController*' type='@'/>
</method>
<method selector='setRevealController:'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='PKAnimating'>
<method selector='completionHandler' type='@?8@0:4' type64='@?16@0:8'>
<retval declared_type='PKAnimationCompletionBlock' function_pointer='true' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='isAnimating' type='B8@0:4' type64='B16@0:8'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='layer' type='@8@0:4' type64='@16@0:8'>
<retval declared_type='CALayer*' type='@'/>
</method>
<method selector='setAnimating:' type='v12@0:4B8' type64='v20@0:8B16'>
<arg declared_type='BOOL' index='0' name='animating' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionHandler:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='PKAnimationCompletionBlock' function_pointer='true' index='0' name='completionHandler' type='@?'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayer:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartHandler:' type='v12@0:4@?8' type64='v24@0:8@?16'>
<arg declared_type='PKAnimationStartBlock' function_pointer='true' index='0' name='startHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimationOnLayer:' type='v12@0:4@8' type64='v24@0:8@16'>
<arg declared_type='CALayer*' index='0' name='layer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startHandler' type='@?8@0:4' type64='@?16@0:8'>
<retval declared_type='PKAnimationStartBlock' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='stopAnimation' type='v8@0:4' type64='v16@0:8'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PKBlocks'>
<method selector='performBlock:onMainThread:' type='v16@0:4@?8B12' type64='v28@0:8@?16B24'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='BOOL' index='1' name='mainThread' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PKRevealing'>
<method selector='revealController:didChangeToState:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<arg declared_type='id' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='revealController:willChangeToState:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='PKRevealController*' index='0' name='revealController' type='@'/>
<arg declared_type='id' index='1' name='state' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
