require './app'
require 'sinatra/activerecord/rake'
require 'nokogiri'
require 'open-uri'
require 'pry'
require_relative "./models/user.rb"
require_relative "./models/beer.rb"
require_relative "./models/brewery.rb"

namespace :scrape do
  task :users do
    page = Nokogiri::HTML(open("http://www.mahaffeyspub.com/beer/member_list.php#numeric"))
    last_scraped = Time.now
    body_text = page.css('body')[0].text
    list_start = body_text.index("1--Shannon Leonard")
    body_text = body_text[list_start-1..body_text.length-1]
    user_list = body_text.split("\r\n")
    user_list.pop
    user_list.map! { |user| user[1..user.length-1] }
    user_list.map! { |user| user.split("--") }
    user_list.each do |user|
      u = User.new(name: user[1], last_scraped: last_scraped, beer_count: 0)
      u.id = user[0].to_i
      u.save
    end
  end

  task :drank_beers do
    brewery_id = Brewery.first.id
    users = User.where('id between 3100 and 4000')
    users.each do |user|
      page = Nokogiri::HTML(open("http://www.mahaffeyspub.com/beer/beers_consumed.php?member_id_num=#{user.id}"))
      body_text = page.css('body').text
      list_start = body_text.split("\r\n")
      list_start.each do |i|
        match = i.match(/\(([BCD])\)\s(.+)/)
        next if not match
        beer_id = Beer.where(:name => match[2]).where(:type => match[1]).first
        if not beer_id
          beer_id = Beer.create_in_brewery(brewery_id, {"id" => Beer.next_id, "name" => match[2], "type" => match[1] })
        end
        if not user.drank?(beer_id)
          user.add_beer(beer_id)
        end
        

      end
    end
  end

  task :current_beers do
    page = Nokogiri::HTML(open("http://www.mahaffeyspub.com/beer/beers_in_stock.php"))
    body_text = page.css('body').text
    list_start = body_text.split("\r\n")
    list_start.each do |i|
      match = i.match(/\(([BCD])\)\s(.+)/)
      if match
        beer = Beer.new(name: match[2], container_type: match[1])
        beer.save
      end
    end
  end

end
